{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/hotels/discount.pipe.ts","webpack:///src/app/hotels/hotel-details.component.ts","webpack:///src/app/hotels/hotel-details.component.html","webpack:///src/app/hotels/hotel.module.ts","webpack:///src/app/hotels/hotels.component.ts","webpack:///src/app/hotels/hotels.component.html","webpack:///src/app/hotels/hotels.service.ts","webpack:///src/app/hotels/myupper.pipe.ts","webpack:///src/app/hotels/productSearch.pipe.ts","webpack:///src/app/orders/form.model.ts","webpack:///src/app/orders/order.module.ts","webpack:///src/app/orders/order.service.ts","webpack:///src/app/orders/orders.component.ts","webpack:///src/app/orders/orders.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/star.component.ts","webpack:///src/app/shared/star.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","providers","AppComponent","selector","templateUrl","AppModule","declarations","bootstrap","FooterComponent","styles","HeaderComponent","title","styleUrls","HomeComponent","pageTitle","DiscountPipe","value","userinput","name","HotelDetailsComponent","route","hotelsService","router","snapshot","params","getHotelDetails","subscribe","data","details","navigate","onBack","HotelModule","HotelsComponent","description","showImage","discountPrice","Math","floor","random","message","restaurants","console","log","getHotels","HotelsService","http","HotelUrl","get","MyUpperPipe","kindOf","toUpperCase","toLowerCase","ProductSearch","userInput","filter","indexOf","locality","IUser","orderId","firstname","email","address","phone","OrderModule","OrderService","orderUrl","user","price","rname","post","OrdersComponent","orderService","myUser","queryParams","quantity","totalPrice","form","placeOrder","submitOrder","SharedModule","StarComponent","ratingClicked","rating","starWidth","emit","onStar","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport { Routes, RouterModule} from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { OrdersComponent } from './orders/orders.component';\nimport { HotelsComponent } from './hotels/hotels.component';\nimport { HotelDetailsComponent } from './hotels/hotel-details.component';\n\nconst routes: Routes = [\n    {path: 'hotels', component: HotelsComponent },\n    {path: 'hotels/:id', component: HotelDetailsComponent },\n    {path: 'home', component: HomeComponent },\n    {path: 'orders/:id', component: OrdersComponent },\n    {path: '', redirectTo: 'home', pathMatch: 'full' },\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes)\n    ],\n    providers: [],\n    exports: [\n        RouterModule\n    ]\n})\n\nexport class AppRoutingModule {\n\n}\n\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\n\n\nexport class AppComponent {\n\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport {FormsModule} from '@angular/forms';\n\nimport { AppComponent} from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HomeComponent } from './home/home.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HotelModule } from './hotels/hotel.module';\nimport { OrderModule } from './orders/order.module';\n\n@NgModule({\n  // All your Module & Routing Will be declare here\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    HotelModule,\n    OrderModule\n  ],\n\n  // All Component, Pipe & Directive  Will be declare here\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent\n  ],\n\n  // One and One first component\n  bootstrap: [\n    AppComponent\n  ],\n\n  // All Service\n  providers: []\n})\n\nexport class AppModule {\n\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html',\n    styles: ['p{color:red;text-align:center}' ]\n})\n\n\nexport class FooterComponent {\n\n}\n","<div>\n    <hr/>\n    <p>&copy;NareshIT <span style=\"color:green\">2020</span></p> \n</div>","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['header.component.css']\n})\n\nexport class HeaderComponent {\n    title = 'Hotel App';\n}\n","<nav class=\"navbar navbar-inverse\">\n    <div class=\"container-fluid\">\n      <div class=\"navbar-header\">\n        <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n          <span class=\"icon-bar\"></span>\n        </button>\n        <a class=\"navbar-brand\" [routerLink]=\"['/home']\">{{title}}</a>\n      </div>\n      <div class=\"collapse navbar-collapse\" id=\"myNavbar\">\n        <ul class=\"nav navbar-nav\">\n          <li><a [routerLink]=\"['/home']\">Home</a></li>\n          <li><a [routerLink]=\"['/hotels']\">Hotels</a></li>\n          <li><a [routerLink]=\"['/orders']\">Orders</a></li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n  <hr/>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  pageTitle = 'Developer Funnel';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"panel panel-warning\">\n    <div class=\"panel-heading\">\n        {{pageTitle}}\n    </div>\n    <div class=\"panel-body\"  >\n        <div class=\"row\" >\n            <img src=\"https://i.ibb.co/2WnY7z6/Screenshot-2020-05-02-at-12-44-42-PM.png\" \n                 class=\"img-responsive center-block\"\n                 style=\"max-height:300px;padding-bottom:50px\"/>\n        </div>\n        <div class=\"row\"  >\n            <div class=\"text-center\">Developed by:</div>\n            <h3 class=\"text-center\">Aakash Handa</h3>\n\n            <div class=\"text-center\">@aakashdeveloper</div>\n            <div class=\"text-center\">\n                <a href=\"http://www.aakashhanda.me\">www.aakashhanda.me</a>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'discount'\n})\n\n\nexport class DiscountPipe implements PipeTransform{\n    transform(value: number, userinput: number): number {\n        value = value - userinput;\n        return value;\n    }\n}\n","import { Component, OnInit} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HotelsService } from './hotels.service';\n\n@Component({\n    templateUrl: './hotel-details.component.html'\n})\n\nexport class HotelDetailsComponent implements OnInit {\n    id: number;\n    details: any[];\n    quntity: number;\n\n    constructor(private route: ActivatedRoute,\n                private hotelsService: HotelsService,\n                private router: Router) {\n\n    }\n\n    ngOnInit(): void {\n        this.id = this.route.snapshot.params['id'];\n        this.hotelsService.getHotelDetails(this.id)\n            .subscribe((data) => this.details = data);\n    }\n\n    onBack(): void{\n       this.router.navigate(['/hotels']);\n    }\n}\n\n\n/*\ncity: string;\n    name: string;\n\nthis.route.queryParams\n            .subscribe((data) => {\n                this.name = data['name'];\n                this.city = data['city']\n            });\n\n*/","<div class=\"panel panel-info\">\n    <div class=\"panel-heading\">\n        <h1>{{details[0].name}}</h1>\n    </div>\n    <div class=\"panel-body\">\n        <img [src]=\"details[0].thumb\" style=\"height:300px;width:300px\"/>\n        <h2>{{details[0].city}}</h2>\n        <h3>{{details[0].locality}}</h3>\n        <h2>{{details[0].rating_text|uppercase}}</h2>\n\n        <h2>\n            {{details[0].aggregate_rating}} Star\n        </h2> \n\n        <h2>{{details[0].min_price| currency:'INR'}} for 2 person</h2>\n        <label>Number of person</label>\n        <input type=\"text\" [(ngModel)]=\"quntity\"/>\n        <div>\n            <a class=\"btn btn-success\" \n            [routerLink]=\"['/orders', details[0].id]\"\n            [queryParams]=\"{person:quntity}\">\n            Place Order\n        </a> &nbsp;\n            <a class=\"btn btn-danger\"\n            (click)=\"onBack()\"\n            >Back</a>\n        </div>\n    </div>\n</div>\n","import { NgModule} from '@angular/core';\nimport { HotelsComponent } from './hotels.component';\nimport { MyUpperPipe } from './myupper.pipe';\nimport { DiscountPipe } from './discount.pipe';\nimport { ProductSearch } from './productSearch.pipe';\nimport { HotelDetailsComponent } from './hotel-details.component';\nimport { HotelsService } from './hotels.service';\nimport { StarComponent } from '../shared/star.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        SharedModule\n\n    ],\n    declarations: [\n        HotelsComponent,\n        MyUpperPipe,\n        DiscountPipe,\n        ProductSearch,\n        HotelDetailsComponent\n\n    ],\n    providers: [\n        HotelsService,\n    ]\n})\n\nexport class HotelModule {\n\n}\n","import { Component, OnInit, OnChanges } from '@angular/core';\nimport { IProduct } from './hotel.model';\nimport { HotelsService } from './hotels.service';\n\n@Component({\n  selector: 'app-hotels',\n  templateUrl: './hotels.component.html',\n  styleUrls: ['./hotels.component.css']\n})\nexport class HotelsComponent implements OnInit, OnChanges {\n   title: string  = 'My Ang App';\n   description: string = 'Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out print, graphic or web designs. The passage is attributed to an unknown typesetter in the 15th century who is thought to have scrambled parts of Cicero';\n   showImage: boolean = true;\n   userSearch;\n   discountPrice = Math.floor(Math.random() * (50 - 10)) + 10;\n   message = this.discountPrice > 25 ? 'Super Lucky' : 'Lucky';\n   restaurants: IProduct[] = [];\n\n   constructor(public hotelsService: HotelsService){\n       console.log('In Side Constructors');\n   }\n\n   ngOnInit(){\n    console.log('In Side ngOnInit');\n    this.hotelsService.getHotels()\n        .subscribe((data) => this.restaurants = data);\n   }\n\n   ngOnChanges(){\n    console.log('In Side ngOnChanges');\n   }\n\n\n\n  toggleImage(): void{\n    this.showImage = !this.showImage;\n  }\n\n  dataRecive(message: string): void {\n      this.description = message;\n  }\n}\n\n\n\n/*\nngOnInit(){\n    console.log('In Side ngOnInit');\n    this.restaurants = this.hotelsService.getHotels();\n   }\n*/\n","<h4>\n    Current discount Price is : {{discountPrice}} / {{message}}\n</h4>\n<div class='panel panel-primary'>\n    <div class='panel-heading'>\n        {{title}}\n        <br/>\n        {{description}}\n    </div>\n    <div class='panel-body'>\n        <div class=\"row\">\n            <div class=\"col-md-2\">\n                Filter By:\n            </div>\n            <div class=\"col-md-4\">\n                <input type=\"text\" [(ngModel)]=\"userSearch\"/>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <h3>{{(restaurants | search:userSearch).length}} Search Ressult for {{userSearch}}</h3>\n            </div>\n        </div>\n        <div class='row'>\n            <div class='table-responsive'>\n                {{showImage}}\n                <table class='table' *ngIf=\"restaurants && restaurants.length; else noData\">\n                    <thead>\n                        <tr>\n                            <th><button class='btn btn-success'\n                            (click)=\"toggleImage()\">\n                                {{showImage?'Hide Image':'Show Image'}}\n                            </button></th>\n                            <th>Name</th>\n                            <th>City</th>\n                            <th>Price</th>\n                            <th>Rating</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let rest of restaurants | search:userSearch\">\n                            <td> <img [src]=\"rest.thumb\"  class=\"img-responsive\"\n                            *ngIf=\"showImage\"/></td>\n                           <td>\n                               <a [routerLink]=\"['/hotels', rest.id]\"\n                               \n                               >\n                                {{rest.name | MyUpper:'upper'}}\n                                </a>\n                              \n                            </td> \n                           <td>{{rest.city | lowercase}}</td>\n                           <td>{{rest.min_price | discount:discountPrice | currency:'INR'}}</td> \n                           <td [ngStyle]=\"{'color':rest.aggregate_rating<4?'tomato':'skyblue'}\">\n                               <h4>\n                                <app-star [rating]=\"rest.aggregate_rating\"\n                                (ratingClicked)=\"dataRecive($event)\"></app-star>\n                               </h4>\n                            </td> \n                        </tr>\n                    </tbody>\n                </table>\n                <ng-template #noData> \n                    <img src=\"../../assets/loading.gif\"/>\n                </ng-template>\n            </div>\n        </div>\n   \n    </div>\n</div>\n\n\n<!--\n     [queryParams]=\"{name:rest.name,city:rest.city}\"\n-->","import {Injectable} from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { IProduct } from './hotel.model';\nimport { Observable} from 'rxjs';\n\n@Injectable()\n\nexport class HotelsService {\n    private HotelUrl = 'http://localhost:8900/restaurants';\n    constructor(private http: HttpClient) {}\n\n    getHotels(): Observable<IProduct[]>{\n        return this.http.get<IProduct[]>(this.HotelUrl);\n    }\n\n    getHotelDetails(id): Observable<IProduct[]>{\n        return this.http.get<IProduct[]>(`${this.HotelUrl}?id=${id}`);\n    }\n}\n\n\n/*\n  getHotels(){\n        return [\n          {\n              \"id\" : \"123334\",\n              \"name\" : \"Captain Sam's\",\n              \"locality\" : \"Sector 70\",\n              \"city\" : \"Chandigarh\",\n              \"thumb\" : \"https://b.zmtcdn.com/data/reviews_photos/c7a/634a2c0def8a8d044992aea9e7680c7a_1556257724.jpg\",\n              \"aggregate_rating\" : 2.9,\n              \"min_price\": 670,\n              \"rating_text\" : \"Good\"\n          }\n          ];\n    }\n*/\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'MyUpper'\n})\n\nexport class MyUpperPipe implements PipeTransform{\n    transform(value: string, kindOf: string): string {\n        if (kindOf === 'upper'){\n            value = value.toUpperCase();\n        }else{\n            value = value.toLowerCase();\n        }\n        return value;\n    }\n}\n","import { Pipe, PipeTransform} from '@angular/core';\nimport { IProduct } from './hotel.model';\n\n@Pipe({\n    name: 'search'\n})\n\nexport class ProductSearch implements PipeTransform{\n    transform(value: IProduct[], userInput: string): IProduct[] {\n        userInput = userInput ? userInput.toLowerCase() : null;\n        return userInput ?  value.filter((data) =>\n            ((data.name.toLowerCase().indexOf(userInput) !== -1) || (data.locality.toLowerCase().indexOf(userInput) !== -1))) : value;\n    }\n}\n","export class IUser {\n    constructor(\n        public orderId: number,\n        public firstname: string,\n        public email: string,\n        public address: string,\n        public phone: number\n    ){}\n}\n","import { NgModule} from '@angular/core';\nimport { OrdersComponent } from './orders.component';\nimport { OrderService } from './order.service';\nimport { SharedModule } from '../shared/shared.module';\n\n\n@NgModule({\n    imports: [\n        SharedModule\n    ],\n    declarations: [\n        OrdersComponent,\n    ],\n    providers: [\n        OrderService\n    ]\n})\n\nexport class OrderModule {\n\n}\n","import {Injectable} from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { Observable} from 'rxjs';\n\n@Injectable()\n\nexport class OrderService {\n    data;\n    private HotelUrl = 'http://localhost:8900/restaurants';\n    private orderUrl = 'http://localhost:8900/orders';\n    constructor(private http: HttpClient) {}\n\n\n    getHotelDetails(id): Observable<any[]>{\n        return this.http.get<any[]>(`${this.HotelUrl}?id=${id}`);\n    }\n\n    placeOrder(user, price, rname): Observable<any[]> {\n\n        this.data = {\n            \"id\": user.orderId,\n            \"firstname\": user.firstname,\n            \"email\": user.email,\n            \"address\": user.address,\n            \"phone\": user.phone,\n            \"price\": price,\n            \"rname\": rname\n        };\n\n        return this.http.post<any[]>(this.orderUrl, this.data);\n\n\n\n    }\n}\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router} from '@angular/router';\nimport { OrderService } from './order.service';\nimport { NgForm} from '@angular/forms';\nimport {IUser} from './form.model';\n\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n  id: number;\n  quantity: number;\n  totalPrice: number;\n  details: any[];\n  myUser = new IUser(Math.floor(Math.random() * 1000), 'John', 'a@a.com', 'abc delhii', 436643 );\n\n  constructor(private route: ActivatedRoute,\n              private orderService: OrderService) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n    this.orderService.getHotelDetails(this.id)\n        .subscribe((data) => this.details = data);\n\n\n    this.route.queryParams\n      .subscribe((data) => {\n        this.quantity = data['person'];\n      });\n\n    this.totalPrice = (230 / 2) * this.quantity;\n  }\n\n  submitOrder(form: NgForm): void {\n    console.log(form.value);\n    \n    this.orderService.placeOrder(form.value, this.totalPrice, this.details[0].name )\n    .subscribe((data) =>  console.log('data submitted')) ;\n  }\n\n}\n","<div class=\"panel panel-success\">\n    <div class=\"panel-heading\">\n       <h2>Orders Page</h2>\n    </div>\n    <div class=\"panel-body\"  >\n        <div class=\"row\" >\n          <h2>Your order for {{details[0].name}}</h2>\n        </div>\n        <h3>Total Price is {{details[0].min_price/2 * quantity}}</h3>\n        <div class=\"row\">\n            <div class=\"container\">\n            <h2>Please Enter Your Details</h2>\n            <form #form=\"ngForm\" (submit)=\"submitOrder(form)\">\n                <div class=\"form-group\">\n                    <label for=\"orderId\" class=\"control-label\">\n                        OrderId\n                    </label>\n                    <input type=\"text\" class=\"form-control\"\n                    name=\"orderId\"\n                    [(ngModel)]=\"myUser.orderId\"\n                    id=\"orderId\"\n                    readonly>\n                </div>\n                <div class=\"form-group\" [class.has-error]=\"firstName.invalid\">\n                    <label for=\"orderId\" class=\"control-label\"\n                    >\n                        Name\n                    </label>\n                    <input type=\"text\" class=\"form-control\" name=\"firstname\"\n\n                    [(ngModel)]=\"myUser.firstname\"\n                    required\n                    id=\"firstname\"\n                    #firstName=\"ngModel\">\n\n                     <!--h2>{{firstName.invalid}}</h2-->\n                    <!--h2>{{firstName.className}}</h2-->\n                </div>\n                <div class=\"alert alert-danger\" *ngIf=\"firstName.invalid\">\n                    FirstName is required\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"orderId\" class=\"control-label\">\n                        Address\n                    </label>\n                    <input type=\"text\" class=\"form-control\"\n                     name=\"address\"\n                    [(ngModel)]=\"myUser.address\"\n                    id=\"address\">\n                </div>\n                <div class=\"form-group\" [class.has-error]=\"Email.invalid\">\n                    <label for=\"orderId\" class=\"control-label\">\n                        Email\n                    </label>\n                    <input type=\"text\" class=\"form-control\"\n                    name=\"email\"\n                    [(ngModel)]=\"myUser.email\"\n                    pattern=\"^([a-zA-Z0-9]+)@([a-zA-Z0-9]+)\\.([a-z]{2,5})$\"\n                    #Email=\"ngModel\"\n                    id=\"email\">\n                </div>\n                <div class=\"alert alert-danger\" *ngIf=\"Email.invalid\">\n                    Enter Valid Email\n                </div>\n                <div class=\"form-group\" [class.has-error]=\"Phone.invalid\">\n                    <label for=\"orderId\" class=\"control-label\">\n                        Phone\n                    </label>\n                    <input type=\"text\" class=\"form-control\"\n                    name=\"phone\"\n                    [(ngModel)]=\"myUser.phone\"\n                    minlength=\"10\"\n                    #Phone=\"ngModel\"\n                    id=\"phone\">\n                </div>\n                <div class=\"alert alert-danger\" *ngIf=\"Phone.invalid\">\n                    Min length is 10\n                </div>\n                <button type=\"submit\" class=\"btn btn-success\">\n                    Confrim Order\n                </button>\n            </form>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { AppRoutingModule } from '../app-routing.module';\nimport {FormsModule} from '@angular/forms';\nimport { StarComponent } from './star.component';\nimport {CommonModule} from '@angular/common';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        AppRoutingModule,\n        CommonModule\n    ],\n    declarations: [\n        StarComponent\n    ],\n    exports: [\n        FormsModule,\n        AppRoutingModule,\n        StarComponent\n    ]\n\n})\n\nexport class SharedModule {\n\n}\n","import {Component, Input, OnChanges,\n        Output, EventEmitter} from '@angular/core';\n\n@Component({\n    selector: 'app-star',\n    templateUrl: './star.component.html',\n    styleUrls: ['./star.component.css']\n})\n\nexport class StarComponent implements OnChanges{\n    @Input() rating: number;\n    @Output() ratingClicked: EventEmitter<string> = new EventEmitter<string>();\n\n    starWidth: number;\n\n    ngOnChanges(){\n        console.log('>>>', this.rating);\n        this.starWidth = 90 / 5 * this.rating;\n    }\n\n    onStar(): void {\n        this.ratingClicked.emit(`The Rating Clicked is ${this.rating}`);\n    }\n}\n\n","<div class=\"crop\" [style.width.px]=\"starWidth\"\n(click)=\"onStar()\" > \n    <div style=\"width:90px\">\n        <span class=\"glyphicon glyphicon-star\"></span>\n        <span class=\"glyphicon glyphicon-star\"></span>\n        <span class=\"glyphicon glyphicon-star\"></span>\n        <span class=\"glyphicon glyphicon-star\"></span>\n        <span class=\"glyphicon glyphicon-star\"></span>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}